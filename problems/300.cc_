#include <algorithm>
#include <array>
#include <bitset>
#include <cmath>
#include <deque>
#include <iostream>
#include <iterator>
#include <limits>
#include <map>
#include <numeric>
#include <optional>
#include <queue>
#include <set>
#include <stack>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using ll = long long;

class Solution {
 public:
  int lengthOfLIS(std::vector<int>& nums) {
    auto const n = std::size(nums);
    std::vector dp(n, 1);
    for (ll i = 0; i < n; ++i) {
      for (ll j = 0; j < i; ++j) {
        if (nums[i] > nums[j]) {
          dp[i] = std::max(dp[i], dp[j] + 1);
        }
      }
    }
    return *std::max_element(std::begin(dp), std::end(dp));
  }
};
